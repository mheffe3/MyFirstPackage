1
1
source("~/Internship2021/RCode/script1.R")
gc()
data <- read.csv("~/Internship2021/RCode/data.txt", comment.char="#")
View(data)
data <- read.delim("~/Internship2021/RCode/data.txt")
View(data)
animals<-data
plants<-data
plot(animals,plants)
source("~/Internship2021/RCode/script1.R")
1
1
1
1
1
1
w
a
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R")
#Changing a factors order of levels
data <- c("East","West","East","North","North","East","West",
"West","West","East","North")
# Create the factors
factor_data <- factor(data)
print(factor_data)
# Apply the factor function with required order of the level.
new_order_data <- factor(factor_data,levels = c("East","West","North"))
print(new_order_data)
v <- gl(3, 4, labels = c("Tampa", "Seattle","Boston"))
print(v)
#Data Frames
# Create the data frame.
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
# Print the data frame.
print(emp.data)
# Get the structure of the data frame.
str(emp.data)
#Data Frames
# Create the data frame.
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
# Print the data frame.
print(emp.data)
# Get the structure of the data frame.
str(emp.data)
# Print the summary.
print(summary(emp.data))
# Extract Specific columns.
result <- data.frame(emp.data$emp_name,emp.data$salary)
print(result)
# Extract first two rows.
result <- emp.data[1:2,]
print(result)
# Extract 3rd and 5th row with 2nd and 4th column.
result <- emp.data[c(3,5),c(2,4)]
print(result)
#Expanding Data Frame
#Columns
# Add the "dept" coulmn.
emp.data$dept <- c("IT","Operations","IT","HR","Finance")
v <- emp.data
print(v)
#rows
# Create the second data frame
emp.newdata <- 	data.frame(
emp_id = c (6:8),
emp_name = c("Rasmi","Pranab","Tusar"),
salary = c(578.0,722.5,632.8),
start_date = as.Date(c("2013-05-21","2013-07-30","2014-06-17")),
dept = c("IT","Operations","Fianance"),
stringsAsFactors = FALSE
)
# Bind the two data frames.
emp.finaldata <- rbind(emp.data,emp.newdata)
print(emp.finaldata)
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
print(sum(1,5))
print(sum(3,5))
library(MyFirstPackage)
?sum
?factorial
?sum
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
r
source("~/MyFirstPackage/R/pscript1.R")
randomNumberGuess(1,10)
source("~/MyFirstPackage/R/pscript1.R")
randomNumberGuess(1,10)
randomNumberGuess(1,10)
randomNumberGuess(1,100)
source("~/MyFirstPackage/R/pscript1.R")
randomNumberGuess(1,100)
source("~/MyFirstPackage/R/pscript1.R")
rm(list=ls())
source("~/MyFirstPackage/R/pscript1.R")
library(MyFirstPackage)
?randomNumberGame
randomNumberGame(10,100)
randomNumberGame(10,1)
library(MyFirstPackage)
randomNumberGame(10,1)
library(MyFirstPackage)
source("~/MyFirstPackage/R/pscript1.R")
randomNumberGame(10,1)
randomNumberGame(1,1)
source("~/MyFirstPackage/R/pscript1.R")
library(MyFirstPackage)
#Data reshaping
# Create vector objects.
city <- c("Tampa","Seattle","Hartford","Denver")
state <- c("FL","WA","CT","CO")
zipcode <- c(33602,98104,06161,80294)
# Combine above three vectors into one data frame.
addresses <- cbind(city,state,zipcode)
# Print a header.
cat("# # # # The First data frame\n")
# Print the data frame.
print(addresses)
# Create another data frame with similar columns
new.address <- data.frame(
city = c("Lowry","Charlotte"),
state = c("CO","FL"),
zipcode = c("80230","33949"),
stringsAsFactors = FALSE
)
# Print a header.
cat("# # # The Second data frame\n")
# Print the data frame.
print(new.address)
# Combine rows form both the data frames.
all.addresses <- rbind(addresses,new.address)
# Print a header.
cat("# # # The combined data frame\n")
# Print the result.
print(all.addresses)
#Merging Data frames
library(MASS)
merged.Pima <- merge(x = Pima.te, y = Pima.tr,
by.x = c("bp", "bmi"),
by.y = c("bp", "bmi")
)
print(merged.Pima)
nrow(merged.Pima)
#Melting
molten.ships <- melt(ships, id = c("type","year"))
#Melting and Casting
library(MASS)
print(ships)
#Melting
molten.ships <- melt(ships, id = c("type","year"))
print(molten.ships)
install.packages("reshape"); library(reshape)
library(reshape)
#Melting and Casting
library(MASS)
print(ships)
#Melting
molten.ships <- melt(ships, id = c("type","year"))
print(molten.ships)
#Melting and Casting
library(MASS)
print(ships)
#Melting
molten.ships <- melt(ships, id = c("type","year"))
print(molten.ships)
#Casting
recasted.ship <- cast(molten.ships, type+year~variable,sum)
source("~/Internship2021/RCode/script1.R")
#Melting and Casting
library(MASS)
print(ships)
#Melting
molten.ships <- melt(ships, id = c("type","year"))
print(molten.ships)
#Casting
recasted.ship <- cast(molten.ships, type~variable,sum)
#Melting and Casting
library(MASS)
print(ships)
#Melting
molten.ships <- melt(ships, id = c("type","year"))
print(molten.ships)
#Casting
recasted.ship <- cast(molten.ships, type+year,sum)
#Casting
recasted.ship <- cast(molten.ships, type+year~variable,sum)
#Melting and Casting
library(MASS)
print(ships)
#Melting
molten.ships <- melt(ships, id = c("type","year"))
print(molten.ships)
#Casting
recasted.ship <- cast(molten.ships, type+year~variable,sum)
#pie charts
# Create data for the graph.
x <- c(21, 62, 10, 53)
labels <- c("London", "New York", "Singapore", "Mumbai")
# Give the chart file a name.
png(file = "city.png")
# Plot the chart.
pie(x,labels)
# Save the file.
dev.off()
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R")
install.packages("reshape2")
install.packages("reshape")
install.packages("MASS")
install.packages("MASS")
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R")
#pie charts
# Create data for the graph.
x <- c(21, 62, 10, 53)
labels <- c("London", "New York", "Singapore", "Mumbai")
# Give the chart file a name.
png(file = "city.png")
# Plot the chart.
pie(x,labels)
# Save the file.
dev.off()
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R")
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
#Graphing functions
x <- seq(-pi,pi,0.1)
plot(x,sin(x))
#Graphing functions
x <- seq(-pi,pi)
plot(x,sin(x))
plot(x,sin(x))
#Graphing functions
x <- seq(-pi,pi,0.001)
plot(x,sin(x))
#Graphing functions
x <- seq(-pi,pi,0.001)
plot(x,sin(x),type="l")
#Graphing functions
x <- seq(-pi,pi,0.1)
plot(x,sin(x),type="l")
?seq
?plot
#Graphing functions
x <- seq(-pi,pi,0.1)
plot(x,sin(x),type="l")
y <- seq(-10,10,0.1)
plot(y,y*y,type="l")
?plot
#Graphing functions
x <- seq(-pi,pi,0.1)
plot(x,sin(x),type="l")
y <- seq(-10,10,0.1)
plot(y,y*y,type="l", asp = y/(y*y))
#Graphing functions
plot.window(10,10)
#Graphing functions
plot.window(c(-10,10),c(-10,10))
x <- seq(-pi,pi,0.1)
plot(x,sin(x),type="l")
y <- seq(-10,10,0.1)
plot(y,y*y,type="l", asp = y/(y*y))
#Graphing functions
x <- seq(-pi,pi,0.1)
plot(x,sin(x),type="l")
y <- seq(-10,10,0.1)
plot(y,y*y + 2,type="l", asp = y/(y*y))
#Graphing functions
x <- seq(-pi,pi,0.1)
plot(x,sin(x),type="l")
y <- seq(-10,10,0.1)
plot(y,y*y + 50,type="l", asp = y/(y*y))
#Graphing functions
x <- seq(-pi,pi,0.1)
plot(x,sin(x),type="l")
y <- seq(-10,10,0.1)
plot(y,y*y + 50,type="l")
?seq
#Graphing functions
x <- seq(-pi,pi,0.1, length.out = 10)
print(getDateAndTime())
print(getDateAndTime())
source("~/MyFirstPackage/R/pscript1.R")
print(getDateAndTime())
x <- matrix(data=c(1,2,3,4),nrow=2,ncol=2,byrow=TRUE)
dim(x)
x <- matrix(data=c(1,2,3,4),nrow=3,ncol=2,byrow=TRUE)
x <- matrix(data=c(1,2,3,4,5,6),nrow=3,ncol=2,byrow=TRUE)
dim(x)
?determinant
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
# Get the input values.
input <- mtcars[,c('wt','mpg')]
# Give the chart file a name.
png(file = "scatterplot.png")
# Plot the chart for cars with weight between 2.5 to 5 and mileage between 15 and 30.
plot(x = input$wt,y = input$mpg,
xlab = "Weight",
ylab = "Milage",
xlim = c(2.5,5),
ylim = c(15,30),
main = "Weight vs Milage"
)
# Give the chart file a name.
png(file = "scatterplot_matrices.png")
pairs(~wt+mpg+disp+cyl,data = mtcars,
main = "Scatterplot Matrix")
#Graphing functions
x <- seq(-pi,pi,0.1)
plot(x,sin(x),type="l")
y <- seq(-10,10,0.1)
plot(y,y*y + 50,type="l")
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
# Create data for the graph.
x <- c(21, 62, 10, 53)
labels <- c("London", "New York", "Singapore", "Mumbai")
piepercent<- round(100*x/sum(x), 1)
# Give the chart file a name.
png(file = "city.jpg")
# Plot the chart with title and rainbow color pallet.
pie(x, labels = piepercent, main = "City pie chart", col = rainbow(length(x)))
legend("topright", c("London","New York","Singapore","Mumbai"), cex = 0.8, fill = rainbow(length(x)))
# Save the file.
dev.off()
# Create data for the graph.
x <- c(21, 62, 10, 53)
labels <- c("London", "New York", "Singapore", "Mumbai")
piepercent<- round(100*x/sum(x), 1)
# Plot the chart with title and rainbow color pallet.
pie(x, labels = piepercent, main = "City pie chart", col = rainbow(length(x)))
legend("topright", c("London","New York","Singapore","Mumbai"), cex = 0.8, fill = rainbow(length(x)))
#3d Pie chart
# Get the library.
library(plotrix)
source("~/Internship2021/RCode/script1.R", encoding = 'UTF-8')
source("~/MyFirstPackage/R/pscript1.R")
writeToFile()
library(MyFirstPackage)
randomNumberGame()
randomNumberGame(1,10)
source("~/MyFirstPackage/R/pscript1.R")
writeToFile(hello.txt)
source("~/MyFirstPackage/R/pscript1.R")
writeToFile(hello.txt)
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile(hello.txt)
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
library(MyFirstPackage)
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
writeToFile("hello.txt")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
writeToFile("hello.txt")
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
library(MyFirstPackage)
library(MyFirstPackage)
arithSeq(d,a1,n)
{
count <- 0
sequence <- vector()
while(count <= n)
{
sequence <- append(sequence, (a1 + (count)*d))
count <- count+1
}
return(sequence)
}
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
arithSeq(1,0,5)
arithSeq(1,0,5)
source("~/MyFirstPackage/R/pscript1.R")
arithSeq(1,0,5)
geoSeq(1,0,5)
geoSeq(1,1,5)
geoSeq(1,2,5)
geoSeq(2,1,5)
sum(1,5)
source("~/MyFirstPackage/R/pscript1.R")
arithSeq(1,0,5)
geoSeq(2,1,5)
library(MyFirstPackage)
geoSeq(5,4,5)
?geoSeq
library(MyFirstPackage)
sum(1,5)
source("~/MyFirstPackage/R/pscript1.R")
sum(1,5)
source("~/MyFirstPackage/R/pscript1.R")
sum(1,5)
source("~/MyFirstPackage/R/pscript1.R")
source("~/MyFirstPackage/R/pscript1.R")
sum(1,5,2)
source("~/MyFirstPackage/R/pscript1.R")
sum(1,5,2)
sum(1,5,3)
source("~/MyFirstPackage/R/pscript1.R")
sum(1,5,3)
source("~/MyFirstPackage/R/pscript1.R")
sum(5,5,3)
source("~/MyFirstPackage/R/pscript1.R")
sum(5,5,3)
sum(5,1,3)
sum(5,1,-3)
library(MyFirstPackage)
r <- seq(10,-10,0.1)
r <- seq(10,-10,by=0.1)
r <- seq(-10,10,0.1)
print(r)
r<-arithSeq(1,1,1)
print(r)
r<-arithSeq(1,1,10)
print(r)
plot(r,r^2,type="l")
s<-arithSeq(2,1,10)
print(s)
plot(r,s,type="l")
s<-geoSeq(2,1,10)
print(s)
plot(r,s,type="l")
plot(r,s+r,type="l")
plot(r,(s^2)+(r^2),type="l")
arithSeq(3,1,5)
geoSeq(3,1,5)
source("~/MyFirstPackage/R/pscript1.R")
sum(1,5)
sum(1,5,2)
sum(1,5,3)
source("~/MyFirstPackage/R/pscript1.R")
sum(1,5,3)
sum(1,5,2)
sum(1,5)
sum(1,5,1)
